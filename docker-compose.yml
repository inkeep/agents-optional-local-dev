# Tracing Setup - Multiple Options:
# 
# 1. Default (Recommended): Send to OTEL Collector â†’ Routes to BOTH Jaeger + SigNoz
#    - OTLP gRPC: localhost:14317
#    - OTLP HTTP: localhost:14318
#
# 2. Jaeger Only: Send directly to Jaeger 
#    - OTLP gRPC: localhost:24317  
#    - OTLP HTTP: localhost:24318
#    - Jaeger UI: http://localhost:16686
#

x-common: &common
  networks:
    - signoz-net
    - jaeger-network
  restart: unless-stopped
  logging:
    options:
      max-size: 50m
      max-file: "3"
x-clickhouse-defaults: &clickhouse-defaults
  !!merge <<: *common
  image: clickhouse/clickhouse-server:24.1.2-alpine
  tty: true
  labels:
    signoz.io/scrape: "true"
    signoz.io/port: "9363"
    signoz.io/path: "/metrics"
  depends_on:
    signoz-init-clickhouse:
      condition: service_completed_successfully
    signoz-zookeeper:
      condition: service_healthy
  healthcheck:
    test:
      - CMD
      - wget
      - --spider
      - -q
      - 0.0.0.0:8123/ping
    interval: 30s
    timeout: 5s
    retries: 3
  ulimits:
    nproc: 65535
    nofile:
      soft: 262144
      hard: 262144
x-zookeeper-defaults: &zookeeper-defaults
  !!merge <<: *common
  image: bitnami/zookeeper:3.7.1
  user: root
  labels:
    signoz.io/scrape: "true"
    signoz.io/port: "9141"
    signoz.io/path: "/metrics"
  healthcheck:
    test:
      - CMD-SHELL
      - curl -s -m 2 http://localhost:8080/commands/ruok | grep error | grep null
    interval: 30s
    timeout: 5s
    retries: 3
x-db-depend: &db-depend
  !!merge <<: *common
  depends_on:
    signoz-clickhouse:
      condition: service_healthy
    signoz-schema-migrator-sync:
      condition: service_completed_successfully

services: 
  # SigNoz Infrastructure Services
  signoz-init-clickhouse:
    !!merge <<: *common
    image: clickhouse/clickhouse-server:24.1.2-alpine
    container_name: signoz-init-clickhouse
    command:
      - bash
      - -c
      - |
        version="v0.0.1"
        node_os=$$(uname -s | tr '[:upper:]' '[:lower:]')
        node_arch=$$(uname -m | sed s/aarch64/arm64/ | sed s/x86_64/amd64/)
        echo "Fetching histogram-binary for $${node_os}/$${node_arch}"
        cd /tmp
        wget -O histogram-quantile.tar.gz "https://github.com/SigNoz/signoz/releases/download/histogram-quantile%2F$${version}/histogram-quantile_$${node_os}_$${node_arch}.tar.gz"
        tar -xvzf histogram-quantile.tar.gz
        mv histogram-quantile /var/lib/clickhouse/user_scripts/histogramQuantile
    restart: on-failure
    volumes:
      - ./signoz-deploy/common/clickhouse/user_scripts:/var/lib/clickhouse/user_scripts/

  signoz-zookeeper:
    !!merge <<: *zookeeper-defaults
    container_name: signoz-zookeeper
    volumes:
      - signoz-zookeeper:/bitnami/zookeeper
    environment:
      - ZOO_SERVER_ID=1
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_AUTOPURGE_INTERVAL=1
      - ZOO_ENABLE_PROMETHEUS_METRICS=yes
      - ZOO_PROMETHEUS_METRICS_PORT_NUMBER=9141

  signoz-clickhouse:
    !!merge <<: *clickhouse-defaults
    container_name: signoz-clickhouse
    volumes:
      - ./signoz-deploy/common/clickhouse/config.xml:/etc/clickhouse-server/config.xml
      - ./signoz-deploy/common/clickhouse/users.xml:/etc/clickhouse-server/users.xml
      - ./signoz-deploy/common/clickhouse/custom-function.xml:/etc/clickhouse-server/custom-function.xml
      - ./signoz-deploy/common/clickhouse/user_scripts:/var/lib/clickhouse/user_scripts/
      - ./signoz-deploy/common/clickhouse/cluster.xml:/etc/clickhouse-server/config.d/cluster.xml
      - clickhouse:/var/lib/clickhouse/

  signoz-server:
    !!merge <<: *db-depend
    image: signoz/signoz:${VERSION:-v0.91.0}
    container_name: signoz
    command:
      - --config=/root/config/prometheus.yml
    ports:
      - "3080:8080"
    volumes:
      - ./signoz-deploy/common/signoz/prometheus.yml:/root/config/prometheus.yml
      - ./signoz-deploy/common/dashboards:/root/config/dashboards
      - sqlite:/var/lib/signoz/
    environment:
      - SIGNOZ_ALERTMANAGER_PROVIDER=signoz
      - SIGNOZ_TELEMETRYSTORE_CLICKHOUSE_DSN=tcp://signoz-clickhouse:9000
      - SIGNOZ_SQLSTORE_SQLITE_PATH=/var/lib/signoz/signoz.db
      - DASHBOARDS_PATH=/root/config/dashboards
      - STORAGE=clickhouse
      - GODEBUG=netdns=go
      - TELEMETRY_ENABLED=true
      - DEPLOYMENT_TYPE=docker-standalone-amd
      - DOT_METRICS_ENABLED=true
    healthcheck:
      test:
        - CMD
        - wget
        - --spider
        - -q
        - localhost:8080/api/v1/health
      interval: 30s
      timeout: 5s
      retries: 3

  signoz-otel-collector:
    !!merge <<: *db-depend
    image: signoz/signoz-otel-collector:${OTELCOL_TAG:-v0.128.2}
    container_name: signoz-otel-collector
    command:
      - --config=/etc/otel-collector-config.yaml
      - --manager-config=/etc/manager-config.yaml
      - --copy-path=/var/tmp/collector-config.yaml
      - --feature-gates=-pkg.translator.prometheus.NormalizeName
    volumes:
      - ./signoz-deploy/otel-collector-config.yaml:/etc/otel-collector-config.yaml
      - ./signoz-deploy/common/signoz/otel-collector-opamp-config.yaml:/etc/manager-config.yaml
    environment:
      - OTEL_RESOURCE_ATTRIBUTES=host.name=signoz-host,os.type=linux
      - LOW_CARDINAL_EXCEPTION_GROUPING=false
    ports:
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP HTTP receiver
    depends_on:
      signoz-server:
        condition: service_healthy

  signoz-schema-migrator-sync:
    !!merge <<: *common
    image: signoz/signoz-schema-migrator:${OTELCOL_TAG:-v0.128.2}
    container_name: schema-migrator-sync
    command:
      - sync
      - --dsn=tcp://signoz-clickhouse:9000
      - --up=
    depends_on:
      signoz-clickhouse:
        condition: service_healthy
    restart: on-failure

  signoz-schema-migrator-async:
    !!merge <<: *db-depend
    image: signoz/signoz-schema-migrator:${OTELCOL_TAG:-v0.128.2}
    container_name: schema-migrator-async
    command:
      - async
      - --dsn=tcp://signoz-clickhouse:9000
      - --up=
    restart: on-failure

  # OpenTelemetry Collector - routes traces to both Jaeger and SigNoz
  otel-collector:
    image: otel/opentelemetry-collector:latest
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "14317:4317"   # OTLP gRPC receiver (routes to both systems)
      - "14318:4318"   # OTLP HTTP receiver (routes to both systems)
    networks:
      - jaeger-network
      - signoz-net

  # Jaeger for tracing visualization
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "16686:16686"   # Jaeger UI
      - "14250:14250"   # gRPC
      - "14268:14268"   # HTTP
      - "24317:4317"    # Direct OTLP gRPC (Jaeger only, no conflict)
      - "24318:4318"    # Direct OTLP HTTP (Jaeger only, no conflict)
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - COLLECTOR_OTLP_HTTP_ENABLED=true
      - COLLECTOR_OTLP_GRPC_ENABLED=true
    restart: unless-stopped
    networks:
      - jaeger-network

  # Nango Integration Platform
  nango-db:
    image: postgres:16.0-alpine
    container_name: nango-db
    environment:
      POSTGRES_PASSWORD: ${NANGO_DB_PASSWORD:-nango}
      POSTGRES_USER: ${NANGO_DB_USER:-nango}
      POSTGRES_DB: ${NANGO_DB_NAME:-nango}
    volumes:
      - nango_data:/var/lib/postgresql/data
    networks:
      - nango-net
    restart: unless-stopped

  nango-server:
    image: nangohq/nango-server:hosted
    container_name: nango-server
    platform: linux/amd64
    environment:
      - NANGO_ENCRYPTION_KEY=${NANGO_ENCRYPTION_KEY}
      - NANGO_DB_USER=${NANGO_DB_USER:-nango}
      - NANGO_DB_PASSWORD=${NANGO_DB_PASSWORD:-nango}
      - NANGO_DB_HOST=nango-db
      - NANGO_DB_NAME=${NANGO_DB_NAME:-nango}
      - RECORDS_DATABASE_URL=postgresql://${NANGO_DB_USER:-nango}:${NANGO_DB_PASSWORD:-nango}@nango-db:5432/${NANGO_DB_NAME:-nango}
      - NANGO_SERVER_URL=${NANGO_SERVER_URL:-http://localhost:3050}
      - NANGO_PUBLIC_SERVER_URL=${NANGO_PUBLIC_SERVER_URL:-http://localhost:3050}
      - SERVER_PORT=${SERVER_PORT:-3050}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - FLAG_SERVE_CONNECT_UI=${FLAG_SERVE_CONNECT_UI:-true}
      - FLAG_AUTH_ENABLED=${FLAG_AUTH_ENABLED:-false}
      - CSP_REPORT_ONLY=true
      - NANGO_DASHBOARD_USERNAME=${NANGO_DASHBOARD_USERNAME}
      - NANGO_DASHBOARD_PASSWORD=${NANGO_DASHBOARD_PASSWORD}
    volumes:
      - './providers.yaml:/app/nango/packages/providers/providers.yaml'
    ports:
      - '3050:3050'
      - '3051:3051'
    networks:
      - nango-net
    depends_on:
      - nango-db
      - nango-redis
    restart: unless-stopped

  nango-redis:
    image: redis:7.2.4
    container_name: nango-redis
    networks:
      - nango-net
    restart: unless-stopped

networks:
  jaeger-network:
    driver: bridge
  signoz-net:
    name: signoz-local-net
    driver: bridge
  nango-net:
    driver: bridge

volumes:
  nango_data:
  clickhouse:
    name: signoz-clickhouse
  sqlite:
    name: signoz-sqlite
  signoz-zookeeper:
    name: signoz-zookeeper 
